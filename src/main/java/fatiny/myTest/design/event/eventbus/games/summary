线程之间的数据修改
应用场景: 游戏中玩家之间的数据交互
使用技术: 消息队列, Guava的订阅者模式

我发现自己的记忆力好像真的是越来越不行了, 好久之前我记得有天傍晚, 跟昆哥坐在公交车上, 我们有讨论过如何实现线程之间的玩家信息修改.

那天昆哥对我说使用消息队列, 我当时就只是知道, 使用消息队列可以实现线程之间的数据修改. 但是从来没有实际的去实现过.

这两天又遇到了相同的问题, 就着闲暇之余(其实是因为一个很low的主程). 然后就对其进行了测试.

一个线程 发布消息， 另一个线程订阅， 处理
或者用共享数据
一个专门的对象，存储共享数据， 多个线程 读写同一个数据，用锁控制并发
线程只修改自己的数据，如果其他线程要修改对方的数据，应该发送消息给那个线程，让那个线程处理自己的数据
那个线程自己控制，是不应该修改数据
消息是串行到达， 不会存在并发修改数据的情况
有专门的消息队列中间件
redis，acitvemq， kafka
或者简单的情况，自己实现一个
就是，能定义多个管道
就是 发布，订阅模式
发布，订阅模式，是消息队列的一个功能
eventbus 当然可以
所有的数据修改都要通过事件触发
通过消息触发, 不能自己去改
看情况，如果场景简单，总共也没几个玩家， 那就用共享数据加锁

对玩家所有的数据修改, 都通过事件进行处理, 最后保证了数据的一致性.
